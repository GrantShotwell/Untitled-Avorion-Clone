#pragma kernel Generate
#include "PlanetGeneratorTools.compute"
#include "Noise.compute"

// Shape Parameters
float radius;
float magnitude;
samplerCUBE cubemap;

float GetHeight(float3 vertex) {

	float height = (texCUBE(cubemap, vertex, 1, 1).x - 0.5) * magnitude / 2;
	return height;

}

[numthreads(1, 1, 6)]
void Generate(uint3 id : SV_DispatchThreadID) {

	int index = id.x + id.y * resolution.x + id.z * resolution.x * resolution.y;
	float3 vertex = vectors[index];
	float height = GetHeight(vertex);
	float3 center = float3(0, 0, 0);

	float D = sqrt(1 + s * s);
	float3 a = vertex;
	float3 A = a * (radius + GetHeight(a));
	float3 axis1 = normalize(cross(vertex, float3(0, 1, 0)));
	float3 b = (axis1 * s + vertex) / D;
	float3 B = b * (radius + GetHeight(b));
	float3 axis2 = cross(vertex, axis1);
	float3 c = (axis2 * s + vertex) / D;
	float3 C = c * (radius + GetHeight(c));

	vertices[index] = vertex * clamp(radius + height, radius * 0.5, radius * 1.5);
	heights[index] = height;
	normals[index] = cross(B - A, C - A);

}
