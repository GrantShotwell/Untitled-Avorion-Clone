#pragma kernel Generate

int2 resolution;
RWStructuredBuffer<float3> vertices;
RWStructuredBuffer<int> triangles;

float3 up;
float3 right;
float3 forward;

[numthreads(1, 1, 1)]
void Generate(uint3 id : SV_DispatchThreadID) {

	int2 index = int2((int)id.x, (int)id.y);
	int i = index.x + index.y * resolution.x;
	int2 maxIndex = int2(resolution.x - 1, resolution.y - 1);

	float2 percent = (float2)index / (float2)maxIndex;
	float3 vertex = up + (percent.x - 0.5f) * 2 * right
	                   + (percent.y - 0.5f) * 2 * forward;

	vertices[i] = normalize(vertex);

	if (index.x != maxIndex.x && index.y != maxIndex.y) {
		int t = (i - index.y) * 6;
		// Triangle 1
		triangles[t + 0] = i + resolution.x;
		triangles[t + 1] = i + resolution.x + 1;
		triangles[t + 2] = i;
		// Triangle 2
		triangles[t + 3] = i + resolution.x + 1;
		triangles[t + 4] = i + 1;
		triangles[t + 5] = i;
	}

}
